.. java:import:: android.arch.persistence.room Room

.. java:import:: android.content Context

.. java:import:: android.content SharedPreferences

.. java:import:: android.util Log

.. java:import:: com.android.volley AuthFailureError

.. java:import:: com.android.volley NetworkError

.. java:import:: com.android.volley ParseError

.. java:import:: com.android.volley Request

.. java:import:: com.android.volley RequestQueue

.. java:import:: com.android.volley Response

.. java:import:: com.android.volley ServerError

.. java:import:: com.android.volley TimeoutError

.. java:import:: com.android.volley VolleyError

.. java:import:: com.android.volley.toolbox JsonArrayRequest

.. java:import:: com.android.volley.toolbox JsonObjectRequest

.. java:import:: com.android.volley.toolbox StringRequest

.. java:import:: org.codethechange.culturemesh.data CMDatabase

.. java:import:: org.codethechange.culturemesh.data EventDao

.. java:import:: org.codethechange.culturemesh.data EventSubscription

.. java:import:: org.codethechange.culturemesh.data EventSubscriptionDao

.. java:import:: org.codethechange.culturemesh.data NetworkDao

.. java:import:: org.codethechange.culturemesh.data NetworkSubscription

.. java:import:: org.codethechange.culturemesh.data NetworkSubscriptionDao

.. java:import:: org.codethechange.culturemesh.data PostDao

.. java:import:: org.codethechange.culturemesh.data UserDao

.. java:import:: org.codethechange.culturemesh.models City

.. java:import:: org.codethechange.culturemesh.models Country

.. java:import:: org.codethechange.culturemesh.models DatabaseNetwork

.. java:import:: org.codethechange.culturemesh.models Event

.. java:import:: org.codethechange.culturemesh.models FromLocation

.. java:import:: org.codethechange.culturemesh.models Language

.. java:import:: org.codethechange.culturemesh.models Location

.. java:import:: org.codethechange.culturemesh.models NearLocation

.. java:import:: org.codethechange.culturemesh.models Network

.. java:import:: org.codethechange.culturemesh.models Place

.. java:import:: org.codethechange.culturemesh.models PostReply

.. java:import:: org.codethechange.culturemesh.models Postable

.. java:import:: org.codethechange.culturemesh.models Putable

.. java:import:: org.codethechange.culturemesh.models Region

.. java:import:: org.codethechange.culturemesh.models User

.. java:import:: org.json JSONArray

.. java:import:: org.json JSONException

.. java:import:: org.json JSONObject

.. java:import:: java.io UnsupportedEncodingException

.. java:import:: java.util ArrayList

.. java:import:: java.util Calendar

.. java:import:: java.util Date

.. java:import:: java.util HashMap

.. java:import:: java.util List

.. java:import:: java.util Map

.. java:import:: java.util.concurrent.atomic AtomicInteger

API
===

.. java:package:: org.codethechange.culturemesh
   :noindex:

.. java:type::  class API

   This API serves as the interface between the rest of the app and both the local database and the CultureMesh servers. When another part of the app needs to request information, it calls API methods to obtain it. Similarly, API methods should be used to store, send, and update information. The API then handles searching local caches for the information, requesting it from the CultureMesh servers, and updating the local cache. The local cache allows for offline access to limited information. For simplicity, we store the id's of other model objects in the database, not the objects themselves. Thus, when we return these objects, we need to instantiate them with the methods provided in this class. IMPORTANT: If you want to use this class in your activity, make sure you run API.loadAppDatabase() at the beginning of onPreExecute()/doInBackground(), and API.closeDatabase() in onPostExecute(). The app will crash otherwise.

Fields
------
API_URL_BASE
^^^^^^^^^^^^

.. java:field:: static final String API_URL_BASE
   :outertype: API

CURRENT_USER
^^^^^^^^^^^^

.. java:field:: static final String CURRENT_USER
   :outertype: API

FEED_ITEM_COUNT_SIZE
^^^^^^^^^^^^^^^^^^^^

.. java:field:: static final String FEED_ITEM_COUNT_SIZE
   :outertype: API

FIRST_TIME
^^^^^^^^^^

.. java:field:: static final String FIRST_TIME
   :outertype: API

HOSTING
^^^^^^^

.. java:field:: static final String HOSTING
   :outertype: API

NEW_NETWORK
^^^^^^^^^^^

.. java:field:: static final long NEW_NETWORK
   :outertype: API

NO_JOINED_NETWORKS
^^^^^^^^^^^^^^^^^^

.. java:field:: static final boolean NO_JOINED_NETWORKS
   :outertype: API

NO_MAX_PAGINATION
^^^^^^^^^^^^^^^^^

.. java:field:: static final String NO_MAX_PAGINATION
   :outertype: API

PERSONAL_NETWORKS
^^^^^^^^^^^^^^^^^

.. java:field:: static final String PERSONAL_NETWORKS
   :outertype: API

SELECTED_NETWORK
^^^^^^^^^^^^^^^^

.. java:field:: static final String SELECTED_NETWORK
   :outertype: API

SELECTED_USER
^^^^^^^^^^^^^

.. java:field:: static final String SELECTED_USER
   :outertype: API

SETTINGS_IDENTIFIER
^^^^^^^^^^^^^^^^^^^

.. java:field:: static final String SETTINGS_IDENTIFIER
   :outertype: API

TOKEN_BUFFER_SECONDS
^^^^^^^^^^^^^^^^^^^^

.. java:field:: static final int TOKEN_BUFFER_SECONDS
   :outertype: API

TOKEN_SECONDS
^^^^^^^^^^^^^

.. java:field:: static final int TOKEN_SECONDS
   :outertype: API

USER_EMAIL
^^^^^^^^^^

.. java:field:: static final String USER_EMAIL
   :outertype: API

USER_PASS
^^^^^^^^^

.. java:field:: static final String USER_PASS
   :outertype: API

loginToken
^^^^^^^^^^

.. java:field:: static String loginToken
   :outertype: API

loginTokenExpiration
^^^^^^^^^^^^^^^^^^^^

.. java:field:: static Calendar loginTokenExpiration
   :outertype: API

mDb
^^^

.. java:field:: static CMDatabase mDb
   :outertype: API

reqCounter
^^^^^^^^^^

.. java:field:: static int reqCounter
   :outertype: API

settings
^^^^^^^^

.. java:field:: static SharedPreferences settings
   :outertype: API

Methods
-------
closeDatabase
^^^^^^^^^^^^^

.. java:method:: static void closeDatabase()
   :outertype: API

getCredentials
^^^^^^^^^^^^^^

.. java:method:: static String getCredentials()
   :outertype: API

   Use this method to append our credentials to our server requests. For now, we are using a static API key. In the future, we are going to want to pass session tokens.

   :return: credentials string to be appended to request url as a param.

initializePrefs
^^^^^^^^^^^^^^^

.. java:method:: public static void initializePrefs(SharedPreferences settings)
   :outertype: API

loadAppDatabase
^^^^^^^^^^^^^^^

.. java:method:: public static void loadAppDatabase(Context context)
   :outertype: API

